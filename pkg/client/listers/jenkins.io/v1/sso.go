// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/jenkins-x/sso-operator/pkg/apis/jenkins.io/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SSOLister helps list SSOs.
type SSOLister interface {
	// List lists all SSOs in the indexer.
	List(selector labels.Selector) (ret []*v1.SSO, err error)
	// SSOs returns an object that can list and get SSOs.
	SSOs(namespace string) SSONamespaceLister
	SSOListerExpansion
}

// sSOLister implements the SSOLister interface.
type sSOLister struct {
	indexer cache.Indexer
}

// NewSSOLister returns a new SSOLister.
func NewSSOLister(indexer cache.Indexer) SSOLister {
	return &sSOLister{indexer: indexer}
}

// List lists all SSOs in the indexer.
func (s *sSOLister) List(selector labels.Selector) (ret []*v1.SSO, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.SSO))
	})
	return ret, err
}

// SSOs returns an object that can list and get SSOs.
func (s *sSOLister) SSOs(namespace string) SSONamespaceLister {
	return sSONamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SSONamespaceLister helps list and get SSOs.
type SSONamespaceLister interface {
	// List lists all SSOs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.SSO, err error)
	// Get retrieves the SSO from the indexer for a given namespace and name.
	Get(name string) (*v1.SSO, error)
	SSONamespaceListerExpansion
}

// sSONamespaceLister implements the SSONamespaceLister
// interface.
type sSONamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SSOs in the indexer for a given namespace.
func (s sSONamespaceLister) List(selector labels.Selector) (ret []*v1.SSO, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.SSO))
	})
	return ret, err
}

// Get retrieves the SSO from the indexer for a given namespace and name.
func (s sSONamespaceLister) Get(name string) (*v1.SSO, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("sso"), name)
	}
	return obj.(*v1.SSO), nil
}
