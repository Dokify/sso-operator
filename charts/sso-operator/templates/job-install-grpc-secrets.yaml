{{- if .Values.dex.certs.install.create }}
{{ $caName := .Values.dex.certs.grpcCA }}
{{ $clientTlsSecretName := .Values.dex.certs.grpcClientTls }}
{{ $sourceNamespace := .Values.dex.certs.install.sourceNamespace }}
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "4"
    "helm.sh/hook-delete-policy": hook-succeeded
  name: job-install-grpc-secrets
  labels:
    draft: {{ default "draft-app" .Values.draft }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
spec:
  activeDeadlineSeconds: {{ .Values.dex.certs.install.activeDeadlineSeconds }}
  template:
    metadata:
      labels:
        release: "{{ .Release.Name }}"
        component: "job"
    spec:
      serviceAccountName: {{ template "fullname" . }}-install-certs
      restartPolicy: OnFailure
      containers:
      - name: main
        image: "{{ .Values.dex.certs.install.image }}:{{ .Values.dex.certs.install.imageTag }}"
        imagePullPolicy: {{ .Values.dex.certs.install.imagePullPolicy }}
        command:
        - /bin/bash
        - -exc
        - |
          # Cleanup the existing config map and secrets
          kubectl delete configmap {{ $caName }} --namespace {{ .Release.Namespace }} || true
          kubectl delete secret {{ $clientTlsSecretName }} --namespace {{ .Release.Namespace }} || true

          # Copy the secrts from source namespace
          kubectl get secret {{ $clientTlsSecretName }} --namespace={{ $sourceNamespace }} --export -o yaml |\
          kubectl apply --namespace={{ .Release.Namespace }} -f -
          kubectl get cm {{ $caName }} --namespace={{ $sourceNamespace }} --export -o yaml |\
          kubectl apply --namespace={{ .Release.Namespace }} -f -
{{- end }}
